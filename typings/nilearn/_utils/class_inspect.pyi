"""
This type stub file was generated by pyright.
"""

"""Small utilities to inspect classes."""
def get_params(cls, instance, ignore=...): # -> dict[Unknown, Unknown]:
    """Retrieve the initialization parameters corresponding to a class.

    This helper function retrieves the parameters of function __init__ for
    class 'cls' and returns the value for these parameters in object
    'instance'. When using a composition pattern (e.g. with a NiftiMasker
    class), it is useful to forward parameters from one instance to another.

    Parameters
    ----------
    cls : class
        The class that gives us the list of parameters we are interested in.

    instance : object, instance of BaseEstimator
        The object that gives us the values of the parameters.

    ignore : None or list of strings
        Names of the parameters that are not returned.

    Returns
    -------
    params : dict
        The dict of parameters.

    """
    ...

def enclosing_scope_name(ensure_estimator=..., stack_level=...): # -> str:
    """Find the name of the enclosing scope for debug output purpose.

    Use inspection to climb up the stack until the calling object. This is
    typically used to get the estimator at the origin of a functional call
    for debug print purpose.

    Parameters
    ----------
    ensure_estimator : boolean, optional
        If true, find the enclosing object deriving from 'BaseEstimator'.
        Default=True.

    stack_level : integer, optional
        If ensure_estimator is not True, stack_level quantifies the
        number of frame we will go up. Default=2.

    """
    ...

