[tool.poetry]
name = "afids-utils"
version = "0.1.0"
description = "Utility functions for working with AFIDs data / workflows"
authors = ["Jason Kai <tkai@uwo.ca>"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "afids_utils"}
]
exclude = ["afids_utils/tests"]

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
attrs = "^23.1.0"
numpy = "^1.24.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
ruff = "^0.0.270"
isort = "^5.12.0"
poethepoet = "^0.20.0"
yamlfix = "^1.10.0"
pytest = "^7.3.1"
hypothesis = {extras = ["numpy"], version = "^6.77.0"}
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
isort = "isort afids_utils"
isort-check = "isort -c afids_utils"
black = "black afids_utils"
black-check = "black --check afids_utils"
ruff = "ruff --fix afids_utils"
ruff-check = "ruff afids_utils"
quality = ["yamlfix", "isort", "black", "ruff"]
quality-check = ["yamlfix-check", "isort-check", "black-check", "ruff-check"]
test = "pytest --doctest-modules afids_utils/tests"

[tool.coverage]
omit = "afids_utils/tests/*"
fail_under = 90
precision = 2
show_missing = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79

[tool.poe.tasks.yamlfix]
shell = """
find . -type f \\( \
    -iname \\*.yaml -o -iname \\*.yml \
\\) -exec yamlfix {} \\;
"""

[tool.poe.tasks.yamlfix-check]
shell = """
find . -type f \\( \
    -iname \\*.yaml -o -iname \\*.yml \
\\) -exec yamlfix --check {} \\;
"""

[tool.poe.tasks.test_cov]
shell = """
pytest --doctest-modules --cov=afids_utils afids_utils/tests/ \
--cov-report xml:../cov.xml
"""