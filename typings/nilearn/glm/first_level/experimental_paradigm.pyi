"""
This type stub file was generated by pyright.
"""

"""An experimental protocol is handled as a pandas DataFrame \
that includes an 'onset' field.

This yields the onset time of the events in the experimental paradigm.
It can also contain:

    * a 'trial_type' field that yields the condition identifier.
    * a 'duration' field that yields event duration (for so-called block
        paradigms).
    * a 'modulation' field that associated a scalar value to each event.

Author: Bertrand Thirion, 2015

"""
def check_events(events): # -> DataFrame:
    """Test that the events data describes a valid experimental paradigm.

    It is valid if the events data has ``'onset'`` and ``'duration'`` keys
    with numeric non NaN values.

    Parameters
    ----------
    events : pandas DataFrame
        Events data that describes a functional experimental paradigm.

    Returns
    -------
    events : pandas DataFrame
        Events data that describes a functional experimental paradigm.

    The dataframe has the following columns:

    trial_type : array of shape (n_events,), dtype='s'
        Per-event experimental conditions identifier.
        Defaults to np.repeat('dummy', len(onsets)).

    onset : array of shape (n_events,), dtype='f'
        Per-event onset time (in seconds)

    duration : array of shape (n_events,), dtype='f'
        Per-event durantion, (in seconds)
        defaults to zeros(n_events) when no duration is provided

    modulation : array of shape (n_events,), dtype='f'
        Per-event modulation, (in seconds)
        defaults to ones(n_events) when no duration is provided.

    Raises
    ------
    TypeError
        If the events data is not a pandas DataFrame.

    ValueError
        If the events data has:

            - no ``'onset'`` or ``'duration'`` column,
            - has non numeric values
              in the ``'onset'`` or ``'duration'`` columns
            - has nan values in the ``'onset'`` or ``'duration'`` columns.

    Warns
    -----
    UserWarning
        If the events data:

            - has no ``'trial_type'`` column,
            - has any event with a duration equal to 0,
            - contains columns other than ``'onset'``, ``'duration'``,
              ``'trial_type'`` or ``'modulation'``,
            - contains duplicated events, meaning event with same:

                - ``'trial_type'``
                - ``'onset'``
                - ``'duration'``

    """
    ...

VALID_FIELDS = ...
COLUMN_DEFINING_EVENT_IDENTITY = ...
STRATEGY = ...
def handle_modulation_of_duplicate_events(events):
    """Deal with modulation of duplicate events if they have one.

    Currently the strategy is to sum the modulation values of duplicate events.
    """
    ...

