"""
This type stub file was generated by pyright.
"""

import numpy as _np
from matplotlib import cm as _cm

"""Matplotlib colormaps useful for neuroimaging."""
def alpha_cmap(color, name=..., alpha_min=..., alpha_max=...): # -> LinearSegmentedColormap:
    """Return a colormap with the given color, and alpha going from zero to 1.

    Parameters
    ----------
    color : (r, g, b), or a string
        A triplet of floats ranging from 0 to 1, or a matplotlib
        color string.

    name : string, optional
        Name of the colormap. Default=''.

    alpha_min : Float, optional
        Minimum value for alpha. Default=0.5.

    alpha_max : Float, optional
        Maximum value for alpha. Default=1.0.

    """
    ...

_cmaps_data = ...
if hasattr(_cm, "ocean"):
    ...
if hasattr(_cm, "afmhot"):
    ...
_bwr_data = ...
_cmap_d = ...
roy_big_bl = (_np.array([(255, 255, 0), (255, 200, 0), (255, 120, 0), (255, 0, 0), (200, 0, 0), (150, 0, 0), (100, 0, 0), (60, 0, 0), (0, 0, 0), (0, 0, 80), (0, 0, 170), (75, 0, 125), (125, 0, 160), (75, 125, 0), (0, 200, 0), (0, 255, 0), (0, 255, 255), (0, 255, 255)][: -1]) / 255)
videen_style = ...
def dim_cmap(cmap, factor=..., to_white=...): # -> LinearSegmentedColormap:
    """Dim a colormap to white, or to black."""
    ...

def replace_inside(outer_cmap, inner_cmap, vmin, vmax): # -> LinearSegmentedColormap:
    """Replace a colormap by another inside a pair of values."""
    ...

